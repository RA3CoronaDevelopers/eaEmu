##################################################
# file: StorageServer_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py -wb StorageServer.wsdl
# 
##################################################

from StorageServer_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI.schema import GED, GTD
import ZSI
from ZSI.generate.pyclass import pyclass_type
from ZSI.twisted import client

# Locator
class StorageServerLocator:
    StorageServerSoap_address = "http://redalert3pc.sake.gamespy.com/SakeStorageServer/StorageServer.asmx"
    def getStorageServerSoapAddress(self):
        return StorageServerLocator.StorageServerSoap_address
    def getStorageServerSoap(self, url=None, **kw):
        return StorageServerSoapSOAP(url or StorageServerLocator.StorageServerSoap_address, **kw)

# Methods
class StorageServerSoapSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: CreateRecord
    def CreateRecord(self, request, **kw):
        if isinstance(request, CreateRecordSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/CreateRecord", **kw)
        # no output wsaction
        response = self.binding.Receive(CreateRecordSoapOut.typecode)
        return response

    # op: UpdateRecord
    def UpdateRecord(self, request, **kw):
        if isinstance(request, UpdateRecordSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/UpdateRecord", **kw)
        # no output wsaction
        response = self.binding.Receive(UpdateRecordSoapOut.typecode)
        return response

    # op: DeleteRecord
    def DeleteRecord(self, request, **kw):
        if isinstance(request, DeleteRecordSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/DeleteRecord", **kw)
        # no output wsaction
        response = self.binding.Receive(DeleteRecordSoapOut.typecode)
        return response

    # op: SearchForRecords
    def SearchForRecords(self, request, **kw):
        if isinstance(request, SearchForRecordsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/SearchForRecords", **kw)
        # no output wsaction
        response = self.binding.Receive(SearchForRecordsSoapOut.typecode)
        return response

    # op: GetMyRecords
    def GetMyRecords(self, request, **kw):
        if isinstance(request, GetMyRecordsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetMyRecords", **kw)
        # no output wsaction
        response = self.binding.Receive(GetMyRecordsSoapOut.typecode)
        return response

    # op: GetSpecificRecords
    def GetSpecificRecords(self, request, **kw):
        if isinstance(request, GetSpecificRecordsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetSpecificRecords", **kw)
        # no output wsaction
        response = self.binding.Receive(GetSpecificRecordsSoapOut.typecode)
        return response

    # op: GetRandomRecords
    def GetRandomRecords(self, request, **kw):
        if isinstance(request, GetRandomRecordsSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetRandomRecords", **kw)
        # no output wsaction
        response = self.binding.Receive(GetRandomRecordsSoapOut.typecode)
        return response

    # op: GetRecordCount
    def GetRecordCount(self, request, **kw):
        if isinstance(request, GetRecordCountSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetRecordCount", **kw)
        # no output wsaction
        response = self.binding.Receive(GetRecordCountSoapOut.typecode)
        return response

    # op: RateRecord
    def RateRecord(self, request, **kw):
        if isinstance(request, RateRecordSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/RateRecord", **kw)
        # no output wsaction
        response = self.binding.Receive(RateRecordSoapOut.typecode)
        return response

    # op: GetRecordLimit
    def GetRecordLimit(self, request, **kw):
        if isinstance(request, GetRecordLimitSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetRecordLimit", **kw)
        # no output wsaction
        response = self.binding.Receive(GetRecordLimitSoapOut.typecode)
        return response

    # op: GetMyImages
    def GetMyImages(self, request, **kw):
        if isinstance(request, GetMyImagesSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/GetMyImages", **kw)
        # no output wsaction
        response = self.binding.Receive(GetMyImagesSoapOut.typecode)
        return response

    # op: DeleteImage
    def DeleteImage(self, request, **kw):
        if isinstance(request, DeleteImageSoapIn) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="http://gamespy.net/sake/DeleteImage", **kw)
        # no output wsaction
        response = self.binding.Receive(DeleteImageSoapOut.typecode)
        return response

CreateRecordSoapIn = GED("http://gamespy.net/sake", "CreateRecord").pyclass

CreateRecordSoapOut = GED("http://gamespy.net/sake", "CreateRecordResponse").pyclass

UpdateRecordSoapIn = GED("http://gamespy.net/sake", "UpdateRecord").pyclass

UpdateRecordSoapOut = GED("http://gamespy.net/sake", "UpdateRecordResponse").pyclass

DeleteRecordSoapIn = GED("http://gamespy.net/sake", "DeleteRecord").pyclass

DeleteRecordSoapOut = GED("http://gamespy.net/sake", "DeleteRecordResponse").pyclass

SearchForRecordsSoapIn = GED("http://gamespy.net/sake", "SearchForRecords").pyclass

SearchForRecordsSoapOut = GED("http://gamespy.net/sake", "SearchForRecordsResponse").pyclass

GetMyRecordsSoapIn = GED("http://gamespy.net/sake", "GetMyRecords").pyclass

GetMyRecordsSoapOut = GED("http://gamespy.net/sake", "GetMyRecordsResponse").pyclass

GetSpecificRecordsSoapIn = GED("http://gamespy.net/sake", "GetSpecificRecords").pyclass

GetSpecificRecordsSoapOut = GED("http://gamespy.net/sake", "GetSpecificRecordsResponse").pyclass

GetRandomRecordsSoapIn = GED("http://gamespy.net/sake", "GetRandomRecords").pyclass

GetRandomRecordsSoapOut = GED("http://gamespy.net/sake", "GetRandomRecordsResponse").pyclass

GetRecordCountSoapIn = GED("http://gamespy.net/sake", "GetRecordCount").pyclass

GetRecordCountSoapOut = GED("http://gamespy.net/sake", "GetRecordCountResponse").pyclass

RateRecordSoapIn = GED("http://gamespy.net/sake", "RateRecord").pyclass

RateRecordSoapOut = GED("http://gamespy.net/sake", "RateRecordResponse").pyclass

GetRecordLimitSoapIn = GED("http://gamespy.net/sake", "GetRecordLimit").pyclass

GetRecordLimitSoapOut = GED("http://gamespy.net/sake", "GetRecordLimitResponse").pyclass

GetMyImagesSoapIn = GED("http://gamespy.net/sake", "GetMyImages").pyclass

GetMyImagesSoapOut = GED("http://gamespy.net/sake", "GetMyImagesResponse").pyclass

DeleteImageSoapIn = GED("http://gamespy.net/sake", "DeleteImage").pyclass

DeleteImageSoapOut = GED("http://gamespy.net/sake", "DeleteImageResponse").pyclass
